FIELD
{
    .1145.车牌号;
    .1145.状态;
    .1145.社区;
    .1145.预约事宜;
    .1145.预约日期;
    .1145.开始使用时间;
    .1145.结束使用时间;
    .1145.出发地;
    .1145.目的地;
    .1145.联系方式;
    .1145.Field14;

    .1156.是否已隐藏;
    .1156.社区;
    .1156.预约事宜;
    .1156.车牌号;
    .1156.状态;
    .1156.申请人工号;
    .1156.申请人姓名;
    .1156.部门;
    .1156.申请日期;
    .1156.预约日期;
    .1156.开始使用时间;
    .1156.结束使用时间;
    .1156.出发地;
    .1156.目的地;

    .1098.姓名;
    .1098.现属部门;

}
VAR
{
    String s社区, s预约事宜, s车牌号, s预约日期, s开始时间, s车辆状态, s申请日期, s结束时间, str2;
    String s1156开始时间, s1156结束时间, current_us, tips, current_name, current_groupid;
    String starting, destination, phone, s1156申请人姓名;
    int cp, is_continue, i, np, rec, total_1156, red, flag;
    Struct2 st2, st21;
    double d开始时长, d结束时长, d1156开始时长, d1156结束时长, d预约分钟数, d预约分钟数标准;
}
CLIENT
{
    cp = FW_GetCurrentRecNum();
    s车牌号 = FW_GetValue(1145,车牌号,cp);
    if(s车牌号 == "")
    {
        FW_Dialog1(请填写 "车牌号");
        return(0);
    }

    s社区 = FW_GetValue(1145,社区,cp);
    if(s社区=="")
    {
        FW_Dialog1(请填写 "社区");
        return(0);
    }
    s预约事宜 = FW_GetValue(1145,预约事宜,cp);
    if(s预约事宜=="")
    {
        FW_Dialog1(请填写 "预约事宜");
        return(0);
    }

    s预约日期 = FW_GetValue(1145,预约日期,cp);
    if(s预约日期=="")
    {
        FW_Dialog1(请填写 "预约日期");
        return(0);
    }
    s申请日期 = FW_GetSysDate(0);
    if(s申请日期 > s预约日期)
    {
        FW_Dialog1(不能预约已经过去的时间);
        return(0);		
    }

    s开始时间 = FW_GetValue(1145,开始使用时间,cp);
    if(s开始时间=="")
    {
        FW_Dialog1(请填写 "开始使用时间");
        return(0);
    }
    str2 = "00:00";
    d开始时长 = FW_SpanDateTime(s开始时间, str2, 1);	
    s结束时间 = FW_GetValue(1145,结束使用时间,cp);
    if(s结束时间=="")
    {
        FW_Dialog1(请填写 "结束使用时间");
        return(0);
    }
    starting = FW_GetValue(1145,出发地,cp);
    if(starting=="")
    {
        FW_Dialog1(请填写 "出发地");
        return(0);
    }
    destination = FW_GetValue(1145,目的地,cp);
    if(destination=="")
    {
        FW_Dialog1(请填写 "目的地");
        return(0);
    }
    phone = FW_GetValue(1145,联系方式,cp);
    if(phone=="")
    {
        FW_Dialog1(请填写 "联系方式");
        return(0);
    }
    d结束时长 = FW_SpanDateTime(s结束时间, str2, 1);
    d预约分钟数 = FW_SpanDateTime(s结束时间, s开始时间, 1);
    d预约分钟数标准 = 60.00;
    if (d预约分钟数 < d预约分钟数标准)
    {
        FW_Dialog1(预约时间至少需要一小时);
        return(0);
    }
    s车辆状态 = FW_GetValue(1145,状态,cp);
    if(s车辆状态!="可预约")
    {
        FW_Dialog1(该车辆不可预约，请选择其他车辆);
        return(0);
    }
    if(d开始时长 > d结束时长)
    {
        FW_Dialog1(预约的开始时间大于预约的结束时间);
        return(0);
    }
    is_continue = FW_Dialog1(确认信息填写无误并继续进行预约吗？);
    if(is_continue == 0)
    {
        return(0);
    }
    current_us = FW_GetUserID(2);
}
SERVER
{
    flag = 0;
//校验预约时间是否冲突
    st2=FW_FindRecords("1156, s车牌号@车牌号, s预约日期@预约日期", 0);
    if(st2.mError == 0)
    {
        total_1156=st2.count;
        for(i=0; i<total_1156; i++)
        {
            red = st2.RecordNoList.Get[i];
            s1156开始时间 = FW_GetValue(1156,开始使用时间,red);
            d1156开始时长 = FW_SpanDateTime(s1156开始时间, str2, 1);
            s1156结束时间 = FW_GetValue(1156,结束使用时间,red);
            d1156结束时长 = FW_SpanDateTime(s1156结束时间, str2, 1);
            s1156申请人姓名 = FW_GetValue(1156,申请人姓名,red);
            if((d1156开始时长 < d开始时长) && (d开始时长 < d1156结束时长))
            {
                flag=2;
                return(GotoClient);
            }else if((d1156开始时长 < d结束时长) && (d结束时长 < d1156结束时长))
            {
                flag=2;
                return(GotoClient);
            }else if((d1156开始时长 >= d开始时长) && (d1156结束时长 <= d结束时长))
            {
                flag=2;
                return(GotoClient);
            }
        }
    }

//取得申请人的姓名
    st21 = FW_FindRecords("1098, current_us@UserName", 1);
    rec = st21.RecordNoList.Get[0];
    current_name = FW_GetValue(1098,姓名,rec);
    current_groupid = FW_GetValue(1098,现属部门,rec);
    np = FW_AddNewPage_w(1156);
    FW_SetValue_w(1156,是否已隐藏,np,"否");
    FW_SetValue_w(1156,车牌号,np,s车牌号);
    FW_SetValue_w(1156,社区,np,s社区);
    FW_SetValue_w(1156,预约事宜,np,s预约事宜);
    FW_SetValue_w(1156,申请人工号,np,current_us);
    FW_SetValue_w(1156,申请人姓名,np,current_name);
    FW_SetValue_w(1156,部门,np,current_groupid);
    FW_SetValue_w(1156,申请日期,np,s申请日期);
    FW_SetValue_w(1156,预约日期,np,s预约日期);
    FW_SetValue_w(1156,开始使用时间,np,s开始时间);
    FW_SetValue_w(1156,结束使用时间,np,s结束时间);
    FW_SetValue_w(1156,出发地,np,starting);
    FW_SetValue_w(1156,目的地,np,destination);
    FW_SetValue_w(1156,联系方式,np,phone);
    FW_SetValue_w(1156,状态,np,"预约成功待通知司机");
    return(GotoClient);
}
CLIENT
{
    if(flag == 2)
    {
        tips = "该预约与"+s1156申请人姓名+s1156开始时间+"至"+s1156结束时间+"的预约时间段存在冲突";
        FW_Dialog1(tips);
        return(0);
    }
    FW_SetValue_w(1145, Field14, cp, "ClientListWinRefresh");
    FW_Dialog1(预约成功！);
}