FIELD
{
    .1139.姓名;
    .1139.申请日期;
    .1139.状态;
    .1139.UserName1;
    .1139.UserName2;
    .1139.UserName3;
    .1139.UserName4;
    .1139.POST1;
    .1139.GroupID1;
    .1139.POST2;
    .1139.GroupID2;
    .1139.POST3;
    .1139.GroupID3;
    .1139.POST4;
    .1139.GroupID4;
    .1139.当前待处理标记Page;
    .1139.当前待处理标记Page备用1;
    .1139.当前待处理标记Page备用2;
    .1139.实际加班共计小时数;
    .1139.预计加班共计小时数;

    .1087.姓名;
    .1087.UserName;
    .1087.POST;

    .1235.事件状态;
    .1235.处理人姓名;
    .1235.处理人工号;
    .1235.处理人职务;
    .1235.处理人部门;
    .1235.处理日期;
    .1235.审批状态;
    .1235.LinkToFormID;
    .1235.LinkToFormPage;
    .1235.提交人姓名;
    .1235.提交人工号;
    .1235.内容;
    .1235.提交日期;

    .1143.UserName;
    .1143.月度加班累计;
    .1143.季度加班累计;
    .1143.年度加班累计;
    .1143.在职加班累计;
    .1143.可调休共计;
    .1143.本季度可调休;
    .1143.月调休可透支时间;
    .1143.个人季度加班上限;
    .1143.上月调休透支时间;
}
VAR
{
    String 域名S, 当前用户工号S, 审批操作S, 审批状态S, 查找处理人条件S, 处理人工号S, 处理人姓名S, 提交人姓名S, 提交人工号S, 申请日期S, 处理人职务S, 处理人部门S, 处理日期S, srch, 提交人职务s, Srch1;
    int i, flag, 查找处理人总数I, 当前页I, 处理人记录页I, 当前待处理标记I, 新纪录I, rec;
    Struct2 查找处理人操作, st20, st21;
    StringList 记录页存放域名;
    double D加班时间, 月度加班d, 季度加班d, 年度加班d, 在职加班d, 调休共计d, 个人上限d, 本季度调休d, 调休透支时间d, 已透支时间d, D抵扣上月透支时间剩余, D上月透支时间, D预计月调休可透支时间, D预计月调休已透支, D预计可调休共计;
}
CLIENT
{
    FW_FormOpen(1087);
    FW_FormOpen(1143);
    FW_FormOpen(1235);
}
SERVER
{
    return(GotoClient);
}
CLIENT
{
    审批操作S = CURRENT.sVALUE;
    if(审批操作S == "0")
    {
        return(0);
    }
    当前页I = FW_GetCurrentRecNum();
    提交人姓名S = FW_GetValue(1139,姓名,当前页I);
    提交人工号S = FW_GetValue(1139,UserName1,当前页I);
    申请日期S = FW_GetSysDate(0);
    处理人职务S = FW_GetValue(1139,POST2,当前页I);
    审批状态S = "待"+处理人职务S+"同意";
    处理人部门S = FW_GetValue(1139,GroupID2,当前页I);
    D加班时间 = FW_GetValue(1139,预计加班共计小时数,当前页I);

}
SERVER
{     
    srch="1087,提交人工号S@UserName";
    st20=FW_FindRecords(srch,1);
    rec=st20.RecordNoList.Get[0];
    提交人职务s=FW_GetValue(1087,POST,rec);
    if(提交人职务s=="执行主任")
    {
        Srch1="1143,提交人工号S@UserName";
        st21=FW_FindRecords(Srch1,1);
        if(st21.mError!=0)
        {
            flag=2;
            return(GotoClient);
        }
        rec=st21.RecordNoList.Get[0];
                
                //上月透支时间计算
        D上月透支时间 = FW_GetValue(1143,上月调休透支时间,rec);
        D抵扣上月透支时间剩余 = D加班时间;
        if(D上月透支时间 > 0)
        {
            if(D抵扣上月透支时间剩余 <= D上月透支时间)
            {
                D上月透支时间 = D上月透支时间 - D抵扣上月透支时间剩余;
                D抵扣上月透支时间剩余 =0;
            }
            else if(D抵扣上月透支时间剩余 > D上月透支时间)
            {
                D抵扣上月透支时间剩余 = D抵扣上月透支时间剩余 -D上月透支时间;
                D上月透支时间 = 0;
            }
        }
        FW_SetValue_w(1143,上月调休透支时间,rec,D上月透支时间);

        //个人调休透支时间计算
        if(D抵扣上月透支时间剩余 <= 0){
        }else
        {
            调休透支时间d = FW_GetValue(1143,月调休可透支时间,rec);
            已透支时间d = 7.5-调休透支时间d;
            if(D抵扣上月透支时间剩余 <= 已透支时间d)
            {
                调休透支时间d = 调休透支时间d + D抵扣上月透支时间剩余;
            }else if(D抵扣上月透支时间剩余 > 已透支时间d)
            {
                调休透支时间d = 7.5;
            }
            FW_SetValue_w(1143,月调休可透支时间,rec,调休透支时间d);
        }

        //可调休共计和本季度可调休计算
        调休共计d=FW_GetValue(1143,可调休共计,rec);
        本季度调休d=FW_GetValue(1143,本季度可调休,rec);
        调休共计d= 调休共计d + D抵扣上月透支时间剩余;
        本季度调休d= 本季度调休d + D抵扣上月透支时间剩余;

        月度加班d=FW_GetValue(1143,月度加班累计,rec);
        月度加班d= 月度加班d + D加班时间;
        季度加班d=FW_GetValue(1143,季度加班累计,rec);
        季度加班d= 季度加班d + D加班时间;
        年度加班d=FW_GetValue(1143,年度加班累计,rec);
        年度加班d= 年度加班d + D加班时间;
        在职加班d=FW_GetValue(1143,在职加班累计,rec);
        在职加班d= 在职加班d + D加班时间;
        
        FW_SetValue_w(1143,月度加班累计,rec,月度加班d);
        FW_SetValue_w(1143,季度加班累计,rec,季度加班d);
        FW_SetValue_w(1143,年度加班累计,rec,年度加班d);
        FW_SetValue_w(1143,在职加班累计,rec,在职加班d);
        FW_SetValue_w(1143,可调休共计,rec,调休共计d);
        FW_SetValue_w(1143,本季度可调休,rec,本季度调休d);

        FW_SetValue_w(1139,申请日期,当前页I,申请日期S);
        审批状态S="已通过";
        FW_SetValue_w(1139,状态,当前页I,审批状态S);
        FW_SetValue_w(1139,POST1,当前页I,"执行主任");
        
        return(GotoClient);
    }
    if(处理人部门S != "")
    {
        查找处理人条件S = "1087,处理人职务S@POST,处理人部门S@GroupID";
    }else if(处理人部门S == "")
    {
        查找处理人条件S = "1087,处理人职务S@POST";
    }
        查找处理人操作 = FW_FindRecords(查找处理人条件S,0);
        查找处理人总数I = 查找处理人操作.count;
        记录页存放域名 = [ 1139, "当前待处理标记Page", "当前待处理标记Page备用1", "当前待处理标记Page备用2" ];
        for(i=0;i<查找处理人总数I;i++)
        {
                域名S = 记录页存放域名.Get[i];
                新纪录I = FW_AddNewPage_w(1235);
                处理人记录页I = 查找处理人操作.RecordNoList.Get[i];
                处理人工号S = FW_GetValue(1087,UserName,处理人记录页I);
                处理人姓名S = FW_GetValue(1087,姓名,处理人记录页I);
                FW_SetValue_w(1139, 域名S, 当前页I, 新纪录I);
                FW_SetValue_w(1235,处理人工号,新纪录I,处理人工号S);
                FW_SetValue_w(1235,处理人姓名,新纪录I,处理人姓名S);
                FW_SetValue_w(1235,处理人部门,新纪录I,处理人部门S);
                FW_SetValue_w(1235,处理人职务,新纪录I,处理人职务S);
                FW_SetValue_w(1235,事件状态,新纪录I,"待处理");
                FW_SetValue_w(1235,审批状态,新纪录I,审批状态S);
                FW_SetValue_w(1235,LinkToFormID,新纪录I,"1139");
                FW_SetValue_w(1235,LinkToFormPage,新纪录I,当前页I);
                FW_SetValue_w(1235,提交人姓名,新纪录I,提交人姓名S);
                FW_SetValue_w(1235,提交人工号,新纪录I,提交人工号S);
                FW_SetValue_w(1235,内容,新纪录I,"加班申请");
                FW_SetValue_w(1235,提交日期,新纪录I,申请日期S);
        }
    FW_SetValue_w(1139,申请日期,当前页I,申请日期S);
    FW_SetValue_w(1139,状态,当前页I,审批状态S);
    return(GotoClient);
}
CLIENT
{
    FW_SetValue_w(1139,申请日期,当前页I,申请日期S);
    FW_SetValue_w(1139,状态,当前页I,审批状态S);
        if(提交人职务s == "执行主任")
        {
                FW_Dialog1(此申请单现已通过！);
        }else
        {
            FW_Dialog1(加班申请提交成功！);
        }
}